// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot tests Snapshot on <App /> | enzyme shallow 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="App-header"
        >
          <ReactComponent
            className="App-logo"
          />
          <h2
            className="qa-header"
          >
            Convert kg to stone
          </h2>
        </div>,
        <ForwardRef>
          <ForwardRef>
            <ForwardRef
              innerRef={[Function]}
              onChange={[Function]}
              type="number"
              value={0}
            />
             kg
          </ForwardRef>
          <ForwardRef>
            <ForwardRef
              onChange={[Function]}
              type="number"
              value={0}
            />
             stone
          </ForwardRef>
          <ForwardRef>
            <ForwardRef
              className="qa-lbs-input"
              onChange={[Function]}
              type="number"
              value={0}
            />
             lbs
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef
          invisible={true}
        >
          <h2>
            Hello World
          </h2>
        </ForwardRef>,
        <ForwardRef>
          <h2>
            Goodbye Cruel World
          </h2>
        </ForwardRef>,
        <Widget
          invisible={true}
        >
          Fancy pants child prop
        </Widget>,
        <Widget>
          Text is a child prop
        </Widget>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ReactComponent
              className="App-logo"
            />,
            <h2
              className="qa-header"
            >
              Convert kg to stone
            </h2>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "App-logo",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Convert kg to stone",
              "className": "qa-header",
            },
            "ref": null,
            "rendered": "Convert kg to stone",
            "type": "h2",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              <ForwardRef
                innerRef={[Function]}
                onChange={[Function]}
                type="number"
                value={0}
              />
               kg
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                onChange={[Function]}
                type="number"
                value={0}
              />
               stone
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                className="qa-lbs-input"
                onChange={[Function]}
                type="number"
                value={0}
              />
               lbs
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  innerRef={[Function]}
                  onChange={[Function]}
                  type="number"
                  value={0}
                />,
                " kg",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "innerRef": [Function],
                  "onChange": [Function],
                  "type": "number",
                  "value": 0,
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "lastClassName": "ihvhmd",
                    "rules": Array [
                      "
    background-color: #61dafb;
    border: none;
    border-bottom: 1px solid black;
    font-size: 20px;
    text-align: center;
",
                    ],
                  },
                  "displayName": "styled.input",
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "input",
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              " kg",
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": true,
                "lastClassName": "eusUoO",
                "rules": Array [
                  "
    margin: 20px;
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  onChange={[Function]}
                  type="number"
                  value={0}
                />,
                " stone",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "onChange": [Function],
                  "type": "number",
                  "value": 0,
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "lastClassName": "ihvhmd",
                    "rules": Array [
                      "
    background-color: #61dafb;
    border: none;
    border-bottom: 1px solid black;
    font-size: 20px;
    text-align: center;
",
                    ],
                  },
                  "displayName": "styled.input",
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "input",
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              " stone",
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-ifAKCX",
                "isStatic": true,
                "lastClassName": "ftoKPH",
                "rules": Array [
                  "
    display: inline-block;
    margin-bottom: 15px;
    margin-left: 10px;
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-ifAKCX",
              "target": "div",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  className="qa-lbs-input"
                  onChange={[Function]}
                  type="number"
                  value={0}
                />,
                " lbs",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "qa-lbs-input",
                  "onChange": [Function],
                  "type": "number",
                  "value": 0,
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "lastClassName": "ihvhmd",
                    "rules": Array [
                      "
    background-color: #61dafb;
    border: none;
    border-bottom: 1px solid black;
    font-size: 20px;
    text-align: center;
",
                    ],
                  },
                  "displayName": "styled.input",
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "input",
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              " lbs",
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": undefined,
              "componentStyle": ComponentStyle {
                "componentId": "sc-ifAKCX",
                "isStatic": true,
                "lastClassName": "ftoKPH",
                "rules": Array [
                  "
    display: inline-block;
    margin-bottom: 15px;
    margin-left: 10px;
",
                ],
              },
              "displayName": "styled.div",
              "render": [Function],
              "styledComponentId": "sc-ifAKCX",
              "target": "div",
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "eusUoO",
            "rules": Array [
              "
    margin: 20px;
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <h2>
            Hello World
          </h2>,
          "invisible": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Hello World",
          },
          "ref": null,
          "rendered": "Hello World",
          "type": "h2",
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "ivQMso",
            "rules": Array [
              "
    height: 50px;
    width: 200px;
    background-color: ",
              [Function],
              ";
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;

    :hover {
        background-color: #dfffff;
    }

    h2 {
        font-family: monospace;
    }
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <h2>
            Goodbye Cruel World
          </h2>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Goodbye Cruel World",
          },
          "ref": null,
          "rendered": "Goodbye Cruel World",
          "type": "h2",
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "ivQMso",
            "rules": Array [
              "
    height: 50px;
    width: 200px;
    background-color: ",
              [Function],
              ";
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;

    :hover {
        background-color: #dfffff;
    }

    h2 {
        font-family: monospace;
    }
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Fancy pants child prop",
          "invisible": true,
        },
        "ref": null,
        "rendered": "Fancy pants child prop",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Text is a child prop",
        },
        "ref": null,
        "rendered": "Text is a child prop",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="App-header"
          >
            <ReactComponent
              className="App-logo"
            />
            <h2
              className="qa-header"
            >
              Convert kg to stone
            </h2>
          </div>,
          <ForwardRef>
            <ForwardRef>
              <ForwardRef
                innerRef={[Function]}
                onChange={[Function]}
                type="number"
                value={0}
              />
               kg
            </ForwardRef>
            <ForwardRef>
              <ForwardRef
                onChange={[Function]}
                type="number"
                value={0}
              />
               stone
            </ForwardRef>
            <ForwardRef>
              <ForwardRef
                className="qa-lbs-input"
                onChange={[Function]}
                type="number"
                value={0}
              />
               lbs
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef
            invisible={true}
          >
            <h2>
              Hello World
            </h2>
          </ForwardRef>,
          <ForwardRef>
            <h2>
              Goodbye Cruel World
            </h2>
          </ForwardRef>,
          <Widget
            invisible={true}
          >
            Fancy pants child prop
          </Widget>,
          <Widget>
            Text is a child prop
          </Widget>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ReactComponent
                className="App-logo"
              />,
              <h2
                className="qa-header"
              >
                Convert kg to stone
              </h2>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "App-logo",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Convert kg to stone",
                "className": "qa-header",
              },
              "ref": null,
              "rendered": "Convert kg to stone",
              "type": "h2",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef>
                <ForwardRef
                  innerRef={[Function]}
                  onChange={[Function]}
                  type="number"
                  value={0}
                />
                 kg
              </ForwardRef>,
              <ForwardRef>
                <ForwardRef
                  onChange={[Function]}
                  type="number"
                  value={0}
                />
                 stone
              </ForwardRef>,
              <ForwardRef>
                <ForwardRef
                  className="qa-lbs-input"
                  onChange={[Function]}
                  type="number"
                  value={0}
                />
                 lbs
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    innerRef={[Function]}
                    onChange={[Function]}
                    type="number"
                    value={0}
                  />,
                  " kg",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "innerRef": [Function],
                    "onChange": [Function],
                    "type": "number",
                    "value": 0,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bxivhb",
                      "isStatic": true,
                      "lastClassName": "ihvhmd",
                      "rules": Array [
                        "
    background-color: #61dafb;
    border: none;
    border-bottom: 1px solid black;
    font-size: 20px;
    text-align: center;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "render": [Function],
                    "styledComponentId": "sc-bxivhb",
                    "target": "input",
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                " kg",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": true,
                  "lastClassName": "eusUoO",
                  "rules": Array [
                    "
    margin: 20px;
",
                  ],
                },
                "displayName": "styled.div",
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "div",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    onChange={[Function]}
                    type="number"
                    value={0}
                  />,
                  " stone",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "onChange": [Function],
                    "type": "number",
                    "value": 0,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bxivhb",
                      "isStatic": true,
                      "lastClassName": "ihvhmd",
                      "rules": Array [
                        "
    background-color: #61dafb;
    border: none;
    border-bottom: 1px solid black;
    font-size: 20px;
    text-align: center;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "render": [Function],
                    "styledComponentId": "sc-bxivhb",
                    "target": "input",
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                " stone",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": true,
                  "lastClassName": "ftoKPH",
                  "rules": Array [
                    "
    display: inline-block;
    margin-bottom: 15px;
    margin-left: 10px;
",
                  ],
                },
                "displayName": "styled.div",
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "div",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef
                    className="qa-lbs-input"
                    onChange={[Function]}
                    type="number"
                    value={0}
                  />,
                  " lbs",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "qa-lbs-input",
                    "onChange": [Function],
                    "type": "number",
                    "value": 0,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bxivhb",
                      "isStatic": true,
                      "lastClassName": "ihvhmd",
                      "rules": Array [
                        "
    background-color: #61dafb;
    border: none;
    border-bottom: 1px solid black;
    font-size: 20px;
    text-align: center;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "render": [Function],
                    "styledComponentId": "sc-bxivhb",
                    "target": "input",
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                " lbs",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": true,
                  "lastClassName": "ftoKPH",
                  "rules": Array [
                    "
    display: inline-block;
    margin-bottom: 15px;
    margin-left: 10px;
",
                  ],
                },
                "displayName": "styled.div",
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "div",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "lastClassName": "eusUoO",
              "rules": Array [
                "
    margin: 20px;
",
              ],
            },
            "displayName": "styled.div",
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h2>
              Hello World
            </h2>,
            "invisible": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hello World",
            },
            "ref": null,
            "rendered": "Hello World",
            "type": "h2",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "ivQMso",
              "rules": Array [
                "
    height: 50px;
    width: 200px;
    background-color: ",
                [Function],
                ";
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;

    :hover {
        background-color: #dfffff;
    }

    h2 {
        font-family: monospace;
    }
",
              ],
            },
            "displayName": "styled.div",
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h2>
              Goodbye Cruel World
            </h2>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Goodbye Cruel World",
            },
            "ref": null,
            "rendered": "Goodbye Cruel World",
            "type": "h2",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "ivQMso",
              "rules": Array [
                "
    height: 50px;
    width: 200px;
    background-color: ",
                [Function],
                ";
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;

    :hover {
        background-color: #dfffff;
    }

    h2 {
        font-family: monospace;
    }
",
              ],
            },
            "displayName": "styled.div",
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Fancy pants child prop",
            "invisible": true,
          },
          "ref": null,
          "rendered": "Fancy pants child prop",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Text is a child prop",
          },
          "ref": null,
          "rendered": "Text is a child prop",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`snapshot tests Snapshot on <App /> | react-test-renderer 1`] = `
.c3 {
  height: 50px;
  width: 200px;
  background-color: transparent;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3:hover {
  background-color: #dfffff;
}

.c3 h2 {
  font-family: monospace;
}

.c4 {
  height: 50px;
  width: 200px;
  background-color: #61dafb;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4:hover {
  background-color: #dfffff;
}

.c4 h2 {
  font-family: monospace;
}

.c5 {
  height: 50px;
  width: 200px;
  background-color: transparent;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-shadow: grey 5px 5px;
  margin-bottom: 10px;
}

.c6 {
  height: 50px;
  width: 200px;
  background-color: #61dafb;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  margin: 20px;
}

.c1 {
  background-color: #61dafb;
  border: none;
  border-bottom: 1px solid black;
  font-size: 20px;
  text-align: center;
}

.c2 {
  display: inline-block;
  margin-bottom: 15px;
  margin-left: 10px;
}

<div
  className="App"
>
  <div
    className="App-header"
  >
    <svg
      className="App-logo"
    >
      logo.svg
    </svg>
    <h2
      className="qa-header"
    >
      Convert kg to stone
    </h2>
  </div>
  <div
    className="c0"
  >
    <div
      className="c0"
    >
      <input
        className="c1"
        onChange={[Function]}
        type="number"
        value={0}
      />
       kg
    </div>
    <div
      className="c2"
    >
      <input
        className="c1"
        onChange={[Function]}
        type="number"
        value={0}
      />
       stone
    </div>
    <div
      className="c2"
    >
      <input
        className="qa-lbs-input c1"
        onChange={[Function]}
        type="number"
        value={0}
      />
       lbs
    </div>
  </div>
  <div
    className="c3"
  >
    <h2>
      Hello World
    </h2>
  </div>
  <div
    className="c4"
  >
    <h2>
      Goodbye Cruel World
    </h2>
  </div>
  <div
    className="c5"
  >
    Fancy pants child prop
  </div>
  <div
    className="c6"
  >
    Text is a child prop
  </div>
</div>
`;
